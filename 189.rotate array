// create new vector to store the order
 void rotate(vector<int>& nums, int k) {
        int size = nums.size();
        vector<int> res(size);
        for (int i = 0; i < size; i++){
            int pos = (i + k) % size;
            res[pos] = nums[i];
        }
        for (int j = 0; j < size; j++){
            nums[j] = res[j];
        }
 }
 // modified version
 void rotate(vector<int>& nums, int k) {
        int size = nums.size();
        vector<int> res(size);
        for (int i = 0; i < size; i++){
            int pos = (i + k) % size;
            res[pos] = nums[i];
        }
        nums.assign(res.begin(), res.end());
    }
 }
 // reverse method
  void rev(vector<int>& vec, int start, int end){
        while (start < end){
            swap(vec[start], vec[end]);
            start ++;
            end --;
        }
    }
    void rotate(vector<int>& nums, int k) {
        int size = nums.size();
        int pos = k % size - 1;
        rev(nums, 0, size - 1);
        rev(nums, 0, pos);
        rev(nums, pos + 1, size - 1);
    }
